import sys
import csv

#Usage: python ImagePositionExtractor.py InputFile.txt OutputFile.csv
#
#InputFile.txt  ==> Should be images.txt generated by COLMAP.
#OutputFile.csv ==> Output file for the script. Will create or overrite the given file.

#TODO: add return value functionality
def ExtractPositionData(infile, outfile, debug=False):
    #Open input file
    file = open(infile, 'r')
    lines = file.readlines()
    images = []

    #Read each line of the file and add proper data to the images[] array
    for line in lines:
        words = line.split(' ')
        if words[-1].endswith(".JPG\n"):
            image_data = {}
            qw, qx, qy, qz, tx, ty, tz = words[1:8]
            imageName = words[-1][:-1]

            if debug:
                print(imageName + "- QW:" + qw + ", QX:" + qx + ", QY:" + qy + ", QZ:" + qz + ", TX:" + tx +", TY:" + ty +", TZ:" + tz)

            image_data["Image_Name"] = imageName
            image_data["QW"] = qw
            image_data["QX"] = qx
            image_data["QY"] = qy
            image_data["QZ"] = qz
            image_data["TX"] = tx
            image_data["TY"] = ty
            image_data["TZ"] = tz
            images.append(image_data)

    #Wrote to output csv
    with open(outfile, mode='w', newline='') as csv_file:
        csv_file.truncate(0)
        fieldnames = ['Image_Name', 'QW', 'QX', 'QY', 'QZ', 'TX', 'TY', 'TZ']
        writer = csv.DictWriter(csv_file, fieldnames=fieldnames)

        writer.writeheader()
        for image in images:
            writer.writerow(image)
    
    return 0

if __name__ == '__main__':
    if len(sys.argv) != 3:
        print("Invalid usage. Correct usage: python ImagePositionExtractor \"DataFile.txt\" \"Output.csv\"")
        exit()

    infile = sys.argv[1]
    outfile = sys.argv[2]

    #TODO: add return value functionality
    if status := ExtractPositionData(infile, outfile, True) == 0:
        print(f"Data successfully extracted from {infile} and placed in {outfile}")
    elif status == 1:
        pass
    else:
        pass
