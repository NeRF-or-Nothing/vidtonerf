import sys
import csv

#Usage: python image_position_extractor.py InputFile.txt OutputFile.csv
#
#InputFile.txt  ==> Should be images.txt generated by COLMAP.
#OutputFile.csv ==> Output file for the script. Will create or overrite the given file.



#extract_position_data function:
#
#reads the data from infile (assumed to be an output file from COLMAP) and
#    puts the data into outfile.
#
#returns a status code -

#    0 = Success
#    1 = Unspecified error
#    2 = FileNotFoundError; happens when infile cannot be found

def extract_position_data(infile, outfile, debug=False):
    #Open input file
    try:
        file = open(infile, 'r')
    except FileNotFoundError:
        return 2
    except:
        return 1

    lines = file.readlines()
    images = []

    #Read each line of the file and add proper data to the images[] array
    compatible_img_formats = (".jpg\n",".png\n")
    for line in lines:
        words = line.split(' ')
        if (words[-1].lower()).endswith(compatible_img_formats):
            image_data = {}
            qw, qx, qy, qz, tx, ty, tz = words[1:8]
            imageName = words[-1][:-1]

            if debug:
                print(imageName + "- QW:" + qw + ", QX:" + qx + ", QY:" + qy + ", QZ:" + qz + ", TX:" + tx +", TY:" + ty +", TZ:" + tz)

            image_data["Image_Name"] = imageName
            image_data["QW"] = qw
            image_data["QX"] = qx
            image_data["QY"] = qy
            image_data["QZ"] = qz
            image_data["TX"] = tx
            image_data["TY"] = ty
            image_data["TZ"] = tz
            images.append(image_data)

    #Write to output csv
    #TODO: Make this output to JSON with format from Eric
    with open(outfile, mode='w', newline='') as csv_file:
        csv_file.truncate(0)
        fieldnames = ['Image_Name', 'QW', 'QX', 'QY', 'QZ', 'TX', 'TY', 'TZ']
        writer = csv.DictWriter(csv_file, fieldnames=fieldnames)

        writer.writeheader()
        for image in images:
            writer.writerow(image)

    return 0

if __name__ == '__main__':
    if len(sys.argv) != 3:
        print("Invalid usage. Correct usage: python ImagePositionExtractor \"DataFile.txt\" \"Output.csv\"")
        exit()

    infile = sys.argv[1]
    outfile = sys.argv[2]

    #Extract data and print status
    status = extract_position_data(infile, outfile, True)
    if status == 0:
        print(f"Data successfully extracted from {infile} and placed in {outfile}")
    elif status == 1:
        print(f"ERROR: Unspecified error extracting from {infile} or placing in {outfile}")
    elif status == 2:
        print(f"ERROR: Could not file file {infile}")

