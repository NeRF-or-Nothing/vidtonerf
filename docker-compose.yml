version: '3.7'
services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME} 
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - backend
  
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.8-management-alpine
    environment:
       RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
       RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
       # AMQP protocol port
       - '5672:5672'
       # HTTP management UI
       - '15672:15672'
    networks:
      - backend
    
  web-server:
    build: 
      context: .
      dockerfile: ./web-server/Dockerfile
    image: web-server-img
    container_name: web-server
    depends_on:
    - rabbitmq
    - mongodb
    environment:
      APP_PORT: 5000
    volumes:
      # Host directory : Container directory
      - ./web-server:/web-server
    ports:
      - "5000:5000"
    networks:
      - backend
    command: python3 main.py --configip configs/docker_in.json

  sfm-worker:
      build: 
        context: .
        dockerfile: ./colmap/Dockerfile

      image: sfm-worker-img
      container_name: sfm-worker
      depends_on:
        - rabbitmq
        - web-server
      volumes: 
        - ./colmap:/colmap

      ports: 
        - 5100:5100
      networks:
        - backend 
      command: python3.10 main.py --config=configs/default.txt

  nerf-worker:
      build:
        context: .
        dockerfile: ./TensoRF/Dockerfile
      
      image: nerf-worker-img
      container_name: nerf-worker
      depends_on:
        - rabbitmq
        - web-server
      volumes:
        - ./TensoRF:/TensoRF
      
      ports: 
        - 5200:5200
      networks:
        - backend
      command: python3.10 main.py

      deploy:
        resources:
          reservations:
            devices:
              - driver: nvidia
                count: all
                capabilities: [gpu]

networks:
  backend:
    name: backend-network
    driver: bridge

volumes:
  mongodb_data_container:

